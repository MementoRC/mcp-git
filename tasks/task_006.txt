# Task ID: 6
# Title: Implement State Inspection Framework
# Status: pending
# Dependencies: 1, 4
# Priority: medium
# Description: Create a comprehensive state inspection and debugging framework that allows introspection of component state for debugging and LLM analysis.
# Details:
Create the following files in the debugging directory:
- `__init__.py`: Export debugging components
- `state_inspector.py`: Implement ComponentStateInspector class
- `debug_context.py`: Context managers for debugging
- `performance_profiler.py`: Performance profiling utilities

Implement the `ComponentStateInspector` class as shown in section 4.4.2 of the PRD. Create the `StateSnapshot` dataclass for capturing immutable state snapshots. Implement methods for registering components, capturing state, and generating LLM-friendly reports. Add proper thread safety with locks.

# Test Strategy:
Create unit tests that verify state inspection works correctly. Test component registration, state capture, and report generation. Include test cases with mock components that implement the DebuggableComponent protocol.
