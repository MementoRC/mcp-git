{
  "hooks": {
    "matchers": [
      {
        "name": "mcp_first_enforcement",
        "description": "Enforce MCP-first strategy for git/github operations",
        "eventType": "PreToolUse",
        "toolName": "Bash",
        "command": ".claude/hooks/validate_mcp_first.sh"
      },
      {
        "name": "quality_validation_edit",
        "description": "Run quality checks after Edit operations",
        "eventType": "PostToolUse",
        "toolName": "Edit",
        "command": ".claude/hooks/quality_validation.sh"
      },
      {
        "name": "quality_validation_multiedit",
        "description": "Run quality checks after MultiEdit operations",
        "eventType": "PostToolUse", 
        "toolName": "MultiEdit",
        "command": ".claude/hooks/quality_validation.sh"
      },
      {
        "name": "quality_validation_write",
        "description": "Run quality checks after Write operations",
        "eventType": "PostToolUse",
        "toolName": "Write", 
        "command": ".claude/hooks/quality_validation.sh"
      },
      {
        "name": "quality_validation_aider",
        "description": "Run quality checks after Aider operations",
        "eventType": "PostToolUse",
        "toolName": "mcp__aider__aider_ai_code",
        "command": ".claude/hooks/quality_validation.sh"
      },
      {
        "name": "taskmaster_commit_check",
        "description": "Check TaskMaster status before git commits",
        "eventType": "PreToolUse",
        "toolName": "mcp__git__git_commit",
        "command": ".claude/hooks/taskmaster_integration.sh"
      },
      {
        "name": "taskmaster_bash_commit_check", 
        "description": "Check TaskMaster status before bash git commits",
        "eventType": "PreToolUse",
        "toolName": "Bash",
        "command": ".claude/hooks/taskmaster_integration.sh"
      },
      {
        "name": "taskmaster_code_suggestion",
        "description": "Suggest TaskMaster updates after code modifications",
        "eventType": "PostToolUse",
        "toolName": "Edit",
        "command": ".claude/hooks/taskmaster_integration.sh"
      },
      {
        "name": "taskmaster_aider_suggestion",
        "description": "Suggest TaskMaster updates after Aider modifications", 
        "eventType": "PostToolUse",
        "toolName": "mcp__aider__aider_ai_code",
        "command": ".claude/hooks/taskmaster_integration.sh"
      }
    ]
  },
  "agFramework": {
    "enabled": true,
    "version": "1.0.0",
    "description": "AG Framework hooks integration for systematic development",
    "features": {
      "mcpFirstEnforcement": true,
      "qualityValidation": true, 
      "taskmasterIntegration": true,
      "zeroTolerancePolicy": true
    }
  }
}
