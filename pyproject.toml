[project]
name = "mcp-server-git"
version = "0.6.3"
description = "A Model Context Protocol server providing tools to read, search, and manipulate Git repositories programmatically via LLMs"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Anthropic, PBC." }]
maintainers = [{ name = "David Soria Parra", email = "davidsp@anthropic.com" }]
keywords = ["git", "mcp", "llm", "automation"]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "click>=8.1.7",
    "gitpython>=3.1.43",
    "mcp>=1.0.0",
    "pydantic>=2.0.0",
    "aiohttp>=3.8.0",
    "python-dotenv>=1.0.0",
]

[project.scripts]
mcp-server-git = "mcp_server_git:main"
mcp-server-git-simple = "mcp_server_git.server_simple:main_cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = ["pyright>=1.1.389", "ruff>=0.7.3", "pytest>=8.0.0", "pytest-asyncio>=0.21.0", "pytest-cov>=4.0.0", "pytest-timeout>=2.1.0", "psutil>=5.9.0"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
pythonpath = ["src"]
addopts = "-v --tb=short"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "e2e: marks tests as end-to-end tests (deselect with '-m \"not e2e\"')",
    "ci_skip: marks tests to skip in CI environment",
    "mcp_verification: tests that replicate manual MCP verification process",
    "phase1: basic git operations (status, log, diff)",
    "phase2: GitHub API operations (list PRs, get details, status)",
    "phase3: advanced git operations (show, security validation)", 
    "phase4: error handling and edge cases",
    "requires_github_token: tests that require GitHub API access"
]

[tool.ruff]
# Pin to CI-compatible settings for ruff 0.8.0
target-version = "py310"
line-length = 88

[tool.ruff.format]
# Ensure consistent formatting across ruff versions
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
